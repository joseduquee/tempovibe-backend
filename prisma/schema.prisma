// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TypeTimeTracking {
  START
  PAUSE
  END
}

model TimeTracking {
  id        String           @id @default(uuid())
  userId    String
  type      TypeTimeTracking
  timestamp DateTime         @default(now())
  user      User             @relation(fields: [userId], references: [id])
}

enum Roles {
  ADMIN
  DEVELOPER
  USER
}

model User {
  id            String         @id @default(uuid())
  name          String
  lastName      String
  email         String         @unique
  password      String
  roles         Roles[]
  isActive      Boolean        @default(true)

  timeTrackings TimeTracking[]
  items         Item[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  lastUpdateById String?
  lastUpdateBy   User?   @relation("UserLastUpdatedBy", fields: [lastUpdateById], references: [id])
  updatedUsers   User[]  @relation("UserLastUpdatedBy")
}

model Item {
  id            String @id @default(uuid())
  name          String
  quantityUnits Float
  userId        String
  user          User   @relation(fields: [userId], references: [id])
}
